// <auto-generated />
using System;
using Meetings.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Meetings.EF.Migrations
{
    [DbContext(typeof(MeetingsContext))]
    [Migration("20211005161100_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Meetings.DTO.DbModels.CalenderEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedSchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CalenderEvents");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.ClassOfSchool", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MailNickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SchoolGrade_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SecondaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamsObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SchoolGrade_Id");

                    b.ToTable("ClassesOfSchool");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.Grade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Grade_Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.Operator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OperatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Operator_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviaton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactUs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emirate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Operator_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Principal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrincipalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Operator_Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.SchoolGrade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Grade_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("School_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Grade_Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("School_Id");

                    b.ToTable("SchoolGrades");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Subject_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.SubjectClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Class_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Subject_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Class_Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Subject_Id");

                    b.ToTable("SubjectClasses");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.UserEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Event_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("User_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Event_Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("User_Id");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.ClassOfSchool", b =>
                {
                    b.HasOne("Meetings.DTO.DbModels.SchoolGrade", "SchoolGrade")
                        .WithMany("ClassesOfSchool")
                        .HasForeignKey("SchoolGrade_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolGrade");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.School", b =>
                {
                    b.HasOne("Meetings.DTO.DbModels.Operator", "Operator")
                        .WithMany("Schools")
                        .HasForeignKey("Operator_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.SchoolGrade", b =>
                {
                    b.HasOne("Meetings.DTO.DbModels.Grade", "Grade")
                        .WithMany("SchoolGrades")
                        .HasForeignKey("Grade_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meetings.DTO.DbModels.School", "School")
                        .WithMany("SchoolGrades")
                        .HasForeignKey("School_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("School");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.SubjectClass", b =>
                {
                    b.HasOne("Meetings.DTO.DbModels.ClassOfSchool", "ClassOfSchool")
                        .WithMany("SubjectClasses")
                        .HasForeignKey("Class_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meetings.DTO.DbModels.Subject", "Subject")
                        .WithMany("SubjectClasses")
                        .HasForeignKey("Subject_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassOfSchool");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.UserEvent", b =>
                {
                    b.HasOne("Meetings.DTO.DbModels.CalenderEvent", "CalenderEvent")
                        .WithMany("UserEvents")
                        .HasForeignKey("Event_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meetings.DTO.DbModels.User", "User")
                        .WithMany("UserEvents")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalenderEvent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.CalenderEvent", b =>
                {
                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.ClassOfSchool", b =>
                {
                    b.Navigation("SubjectClasses");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.Grade", b =>
                {
                    b.Navigation("SchoolGrades");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.Operator", b =>
                {
                    b.Navigation("Schools");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.School", b =>
                {
                    b.Navigation("SchoolGrades");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.SchoolGrade", b =>
                {
                    b.Navigation("ClassesOfSchool");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.Subject", b =>
                {
                    b.Navigation("SubjectClasses");
                });

            modelBuilder.Entity("Meetings.DTO.DbModels.User", b =>
                {
                    b.Navigation("UserEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
